//- Los mixin son funciones que retornan HTML
mixin storeForm(store = {})
  form(action=`/add/${store._id || ''}` method="POST" class="card" enctype="multipart/form-data")
    label(for="name") Name
    input(type="text" name="name" value=store.name)
    label(for="description") Description
    textarea(name="description")= store.description
    label(for="photo") Photo
    //- Esta resticcion se puede remover con devTools, por eso tenemos las optiones en multer para evitar fotos erroneas
    input(type="file" name="photo" id="photo" accept="image/gif, image/png, image/jpeg")
    if store.photo
      img(src=`/uploads/${store.photo}`, alt=store.name width=200)
    //- direccion, long y lat
    label(for="address") Address
    //- ese location[address] es como decir location.address ya que tenemos bodyparse.urlencoded extended true, para nombres andidados
    input(type="text" id="address" name="location[address]" value=(store.location && store.location.address ) required)
    //- primero Longitud y luego latitud, asi lo espera mongo
    label(for="lng") Address Lng
    input(type="text" id="lng" name="location[coordinates][0]" value=(store.location && store.location.coordinates && store.location.coordinates[0]) required)
    label(for="lng") Address Lat
    input(type="text" id="lat" name="location[coordinates][1]" value=(store.location && store.location.coordinates && store.location.coordinates[1]) required)
    - const choices = ['wifi', 'open late', 'familiy friendly', 'vegetarian', 'lisensed']
    - const tags = store.tags || []
    ul.tags
      each choice in choices  
        .tag.tag__choice
          input(type="checkbox" id=choice value=choice name="tags" checked=(tags.includes(choice) ))
          label(for=choice) #{choice}
    input(type="submit", value="Save ➡️" class="button")